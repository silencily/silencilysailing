package net.silencily.sailing.basic.sm.domain;

// Generated 2007-11-14 16:40:27 by Hibernate Tools 3.2.0.b9

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import net.silencily.sailing.basic.sm.role.service.RoleService;
import net.silencily.sailing.common.domain.tree.FlatTreeNode;
import net.silencily.sailing.container.ServiceProvider;
import net.silencily.sailing.hibernate3.EntityPlus;

/**
 * TblCmnRoleOrg generated by hbm2java
 */
public class TblCmnRoleOrg extends EntityPlus implements FlatTreeNode,
		java.io.Serializable {

	private String tableFlg;

	private TblCmnRoleOrg father;

	private String displayName;

	private String note;

	private Short displayOrder;

	private Set children = new HashSet(0);;

	private Set tblCmnRoles = new HashSet(0);;

	private static RoleService service() {
		return (RoleService) ServiceProvider
				.getService(RoleService.SERVICE_NAME);
	}

	public TblCmnRoleOrg() {
	}

	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	public Short getDisplayOrder() {
		return this.displayOrder;
	}

	public void setDisplayOrder(Short displayOrder) {
		this.displayOrder = displayOrder;
	}

	/**
	 * 当前节点是否是根节点
	 * 
	 * @return 如果这个实例是根节点返回<code>true</code>
	 */
	public boolean isRootNode() {
		return service().getInitRoot().getId().equals(getId());
	}

	/**
	 * 检索这个节点的标题
	 * 
	 * @return 这个节点的标题
	 */
	public String getCaptain() {

		return this.getDisplayName();
	}

	/**
	 * 返回当前节点表示的数据信息, 经常是一个<code>domain object</code>, 可以返回<code>null</code>
	 * 
	 * @return 当前节点表示的数据信息
	 */
	public Object getData() {
		return this;
	}

	/**
	 * 检索唯一标识这个节点的<code>identity</code>, 在一些实现中可能是<code>url</code>, 具体的值 取决于实现
	 * 
	 * @return 标识这个节点的<code>identity</code>
	 */
	public String getIdentity() {
		return getId();
	}

	/**
	 * 得到 ui 上显示的图片类型 ?
	 * 
	 * @return the image Type
	 */
	public String getImageType() {
		return isRootNode() ? "0" : "1";
	}

	/**
	 * 此节点展示到 ui 上时是否可选, 默认应该为 true
	 * 
	 * @return whether this node can be selected from ui
	 */
	public boolean isCanbeSelected() {
		return true;
	}

	/**
	 * @return whether has children
	 */
	public boolean isHasChildren() {
		// 组织结构取得{0}角色和组织结构取得{1}
		if (("1").equals(getTableFlg())) {
			return (getChildren().size() > 0);
		} else {
			// 角色和组织结构取得
			return (getChildren().size() > 0 || this.getTblCmnRoles().size() > 0);
		}
	}

	/**
	 * 当前节点是否是<code>leaf</code>节点, 通常一个节点不允许有子节点才返回<code>true</code>,
	 * 这个描述一般是业务含义上的, 如果一个非叶子节点没有子节点这个方法返回<code>false</code>, 只是
	 * <code>hasChildren() == true</code>
	 * 
	 * @return 如果是<code>leaf</code>节点返回<code>true</code>, 否则<code>false</code>
	 */
	public boolean isLeaf() {
		return !isHasChildren();
	}

	public TblCmnRoleOrg getFather() {
		return father;
	}

	public void setFather(TblCmnRoleOrg father) {
		this.father = father;
	}

	public String getTableFlg() {
		return tableFlg;
	}

	public void setTableFlg(String tableFlg) {
		this.tableFlg = tableFlg;
	}

	public Set getChildren() {
		return children;
	}

	public void setChildren(Set children) {
		this.children = children;
	}

	public Set getTblCmnRoles() {
		return tblCmnRoles;
	}

	public void setTblCmnRoles(Set tblCmnRoles) {
		this.tblCmnRoles = tblCmnRoles;
	}
}
